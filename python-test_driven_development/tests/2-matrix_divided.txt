>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> matrix_divided([[1, 2], [3, 4]], 2)
[[0.5, 1.0], [1.5, 2.0]]
>>> matrix_divided([[100, 200, 300]], 10)
[[10.0, 20.0, 30.0]]
>>> matrix_divided([[10, 20], [30, 40.5]], 5)
[[2.0, 4.0], [6.0, 8.1]]
>>> matrix_divided([[1, 2], [3, 4]], 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero
>>> matrix_divided([[1, 2], [3, 4]], "hello")
Traceback (most recent call last):
    ...
TypeError: div must be a number
>>> matrix_divided("hello", 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([["a", "b"]], 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([[1, 2], [3, 4, 5]], 2)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size
>>> matrix_divided([], 2)
[]
>>> matrix_divided([[]], 2)
[]
>>> print(matrix)
[[1, 2, 3], [4, 5, 6]]