>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>>
>>> # Test present: check instantiation
>>> bg = BaseGeometry()
>>>
>>> # Test present: area()
>>> try:
...     bg.area()
... except Exception as e:
...     print(e)
area() is not implemented
>>>
>>> # Test present: integer_validator()
>>> # Test present: integer_validator("age", 1)
>>> bg.integer_validator("age", 1)
>>>
>>> # Test present: integer_validator("age", 0)
>>> try:
...     bg.integer_validator("age", 0)
... except Exception as e:
...     print(e)
age must be greater than 0
>>>
>>> # Test present: integer_validator("age", -4)
>>> try:
...     bg.integer_validator("age", -4)
... except Exception as e:
...     print(e)
age must be greater than 0
>>>
>>> # Test present: integer_validator("age", "4")
>>> try:
...     bg.integer_validator("age", "4")
... except Exception as e:
...     print(e)
age must be an integer
>>>
>>> # Test present: integer_validator("age", (4,))
>>> try:
...     bg.integer_validator("age", (4,))
... except Exception as e:
...     print(e)
age must be an integer
>>>
>>> # Test present: integer_validator("age", [3])
>>> try:
...     bg.integer_validator("age", [3])
... except Exception as e:
...     print(e)
age must be an integer
>>>
>>> # Test present: integer_validator("age", True)
>>> try:
...     bg.integer_validator("age", True)
... except Exception as e:
...     print(e)
age must be an integer
>>>
>>> # Test present: integer_validator("age", {3, 4})
>>> try:
...     bg.integer_validator("age", {3, 4})
... except Exception as e:
...     print(e)
age must be an integer
>>>
>>> # Test present: integer_validator("age", None)
>>> try:
...     bg.integer_validator("age", None)
... except Exception as e:
...     print(e)
age must be an integer